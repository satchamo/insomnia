## ---
## ---

worker_processes  2;
events { worker_connections 256; }

http {

  ## upstream of your backend
  ## for the sake of the example we run it against a sentiment API
  ## (https://github.com/solso/sentiment-api-example)
  upstream api-backend {
    server api-sentiment.3scale.net:80 max_fails=5 fail_timeout=30;
  }

  init_by_lua '
    shared_state = {insomnia = false}
  ';

  server {
    listen 8080;
    server_name your_server_name;

    ## ---
    ## here goes the magic
    location ~/insomnia/QWERTY {
      if ($request_method = GET) {
        content_by_lua '
          if (shared_state.insomnia==true) then
            ngx.header.content_length = 9
            ngx.say("sleeping")
          else
            ngx.header.content_length = 6
            ngx.say("awake")
          end
        ';
      }
      if ($request_method = PUT) {
        content_by_lua '
          ngx.req.read_body()
          content = ngx.req.get_body_data()
          if (content == "sleep") then
            shared_state.insomnia = true
            ngx.header.content_length = 9
            ngx.say("sleeping")
          else
            if (content == "awake") then
              shared_state.insomnia = false
              ngx.header.content_length = 6
              ngx.say("awake")
            else
              ngx.header.content_length = 37
              ngx.say(content)
              ngx.say("body must be either: awake or sleep")
            end
          end
        ';
      }
    }
    ## ---


    ##Â whatever is not the insomnia control goes to your backend, like it should
    location / {
      ## the "magic" goes here
      access_by_lua '
        while(shared_state.insomnia==true) do
          ngx.sleep(0.2)
        end
      ';
      proxy_pass http://api-backend;
    }
  }
}

